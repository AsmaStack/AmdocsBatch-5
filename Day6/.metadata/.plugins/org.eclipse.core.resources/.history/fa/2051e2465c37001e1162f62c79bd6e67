package listex;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.stream.Collector;
import java.util.stream.Collectors;

public class TestListInterface {

	public static void main(String[] args) {

		List<Employee> EmpList = new ArrayList<Employee>();
		EmpList.add(new Employee(101, "Asma"));
		EmpList.add(new Employee(102, "Jay"));
		EmpList.add(new Employee(103, "Charls"));
		EmpList.add(new Employee(104, "Nikita"));
		EmpList.add(new Employee(105, "Hari"));

		System.out.println(EmpList);

		//using Java 7
//		Collections.sort(EmpList);
//
//		for (Employee emp : EmpList) {
//			System.out.println(emp.toString());
//		}

		
		//using Java 8 API -Stream API
		
		//Sorted By Name using Comparator in Stream API
		List<Employee> empsortedByName=EmpList.stream().
				sorted(Comparator.comparing(Employee::getEmpname))
				.collect(Collectors.toList());
		
		
		System.out.print(empsortedByName +" ");
		
		//Sorted By Salary using getter method in Stream API
		
		List<Employee> empsortedByID=EmpList.stream()
				.sorted(Comparator.comparingInt(Employee::getEmpid))
				.collect(Collectors.toList());
		
		System.out.println(empsortedByID);
	}

}

class Employee implements Comparable {
	private int empid;
	private String empname;
	public Employee(int empid, String empname) {
		super();
		this.empid = empid;
		this.empname = empname;
	}
	@Override
	public String toString() {
		return "Employee [empid=" + empid + ", empname=" + empname + "]";
	}

	@Override
	public int compareTo(Object o) {
		Employee emp1 = (Employee) o;
		if (empid > emp1.empid)
			return 1;
		else if (empid < emp1.empid)
			return -1;
		else
			return 0;
	}

	public int getEmpid() {
		return empid;
	}
	public String getEmpname() {
		return empname;
	}
}